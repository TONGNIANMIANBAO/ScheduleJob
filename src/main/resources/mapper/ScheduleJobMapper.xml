<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.mydemo.dao.ScheduleJobMapper">
  <resultMap id="BaseResultMap" type="com.springboot.mydemo.bean.ScheduleJob">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="job_desc" jdbcType="VARCHAR" property="jobDesc" />
    <result column="job_group" jdbcType="VARCHAR" property="jobGroup" />
    <result column="job_class" jdbcType="VARCHAR" property="jobClass" />
    <result column="job_param" jdbcType="VARCHAR" property="jobParam" />
    <result column="cron_id" jdbcType="INTEGER" property="cronId" />
    <result column="run_time" jdbcType="TIMESTAMP" property="runTime" />
    <result column="next_time" jdbcType="TIMESTAMP" property="nextTime" />
    <result column="valid" jdbcType="INTEGER" property="valid" />
    <result column="emp_no" jdbcType="INTEGER" property="empNo" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, job_name, job_desc, job_group, job_class, job_param, cron_id, run_time, next_time, 
    valid, emp_no, update_time
  </sql>
  <select id="selectByExample" parameterType="com.springboot.mydemo.bean.ScheduleJobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from c_schedule_job_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from c_schedule_job_t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from c_schedule_job_t
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.springboot.mydemo.bean.ScheduleJobExample">
    delete from c_schedule_job_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springboot.mydemo.bean.ScheduleJob">
    insert into c_schedule_job_t (id, job_name, job_desc, 
      job_group, job_class, job_param, 
      cron_id, run_time, next_time, 
      valid, emp_no, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{jobName,jdbcType=VARCHAR}, #{jobDesc,jdbcType=VARCHAR}, 
      #{jobGroup,jdbcType=VARCHAR}, #{jobClass,jdbcType=VARCHAR}, #{jobParam,jdbcType=VARCHAR}, 
      #{cronId,jdbcType=INTEGER}, #{runTime,jdbcType=TIMESTAMP}, #{nextTime,jdbcType=TIMESTAMP}, 
      #{valid,jdbcType=INTEGER}, #{empNo,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.mydemo.bean.ScheduleJob">
    insert into c_schedule_job_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="jobDesc != null">
        job_desc,
      </if>
      <if test="jobGroup != null">
        job_group,
      </if>
      <if test="jobClass != null">
        job_class,
      </if>
      <if test="jobParam != null">
        job_param,
      </if>
      <if test="cronId != null">
        cron_id,
      </if>
      <if test="runTime != null">
        run_time,
      </if>
      <if test="nextTime != null">
        next_time,
      </if>
      <if test="valid != null">
        valid,
      </if>
      <if test="empNo != null">
        emp_no,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobDesc != null">
        #{jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null">
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobClass != null">
        #{jobClass,jdbcType=VARCHAR},
      </if>
      <if test="jobParam != null">
        #{jobParam,jdbcType=VARCHAR},
      </if>
      <if test="cronId != null">
        #{cronId,jdbcType=INTEGER},
      </if>
      <if test="runTime != null">
        #{runTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nextTime != null">
        #{nextTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=INTEGER},
      </if>
      <if test="empNo != null">
        #{empNo,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springboot.mydemo.bean.ScheduleJobExample" resultType="java.lang.Long">
    select count(*) from c_schedule_job_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update c_schedule_job_t
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.jobName != null">
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobDesc != null">
        job_desc = #{record.jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.jobGroup != null">
        job_group = #{record.jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.jobClass != null">
        job_class = #{record.jobClass,jdbcType=VARCHAR},
      </if>
      <if test="record.jobParam != null">
        job_param = #{record.jobParam,jdbcType=VARCHAR},
      </if>
      <if test="record.cronId != null">
        cron_id = #{record.cronId,jdbcType=INTEGER},
      </if>
      <if test="record.runTime != null">
        run_time = #{record.runTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nextTime != null">
        next_time = #{record.nextTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.valid != null">
        valid = #{record.valid,jdbcType=INTEGER},
      </if>
      <if test="record.empNo != null">
        emp_no = #{record.empNo,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update c_schedule_job_t
    set id = #{record.id,jdbcType=INTEGER},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_desc = #{record.jobDesc,jdbcType=VARCHAR},
      job_group = #{record.jobGroup,jdbcType=VARCHAR},
      job_class = #{record.jobClass,jdbcType=VARCHAR},
      job_param = #{record.jobParam,jdbcType=VARCHAR},
      cron_id = #{record.cronId,jdbcType=INTEGER},
      run_time = #{record.runTime,jdbcType=TIMESTAMP},
      next_time = #{record.nextTime,jdbcType=TIMESTAMP},
      valid = #{record.valid,jdbcType=INTEGER},
      emp_no = #{record.empNo,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.mydemo.bean.ScheduleJob">
    update c_schedule_job_t
    <set>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobDesc != null">
        job_desc = #{jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null">
        job_group = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobClass != null">
        job_class = #{jobClass,jdbcType=VARCHAR},
      </if>
      <if test="jobParam != null">
        job_param = #{jobParam,jdbcType=VARCHAR},
      </if>
      <if test="cronId != null">
        cron_id = #{cronId,jdbcType=INTEGER},
      </if>
      <if test="runTime != null">
        run_time = #{runTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nextTime != null">
        next_time = #{nextTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=INTEGER},
      </if>
      <if test="empNo != null">
        emp_no = #{empNo,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.mydemo.bean.ScheduleJob">
    update c_schedule_job_t
    set job_name = #{jobName,jdbcType=VARCHAR},
      job_desc = #{jobDesc,jdbcType=VARCHAR},
      job_group = #{jobGroup,jdbcType=VARCHAR},
      job_class = #{jobClass,jdbcType=VARCHAR},
      job_param = #{jobParam,jdbcType=VARCHAR},
      cron_id = #{cronId,jdbcType=INTEGER},
      run_time = #{runTime,jdbcType=TIMESTAMP},
      next_time = #{nextTime,jdbcType=TIMESTAMP},
      valid = #{valid,jdbcType=INTEGER},
      emp_no = #{empNo,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>